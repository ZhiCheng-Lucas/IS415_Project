{
  "hash": "a078a26672566746eeb04ee4013f25c5",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Hands-On Exercise 02: Thematic Mapping and GeoVisualisation\"\nauthor: \"Chong Zhi Cheng\"\ndate: \"August 19, 2024\"\ndate-modified: \"last-modified\"\nexecute:\n  eval: true\n  echo: true\n  freeze: true\n---\n\n\n# **2  Thematic Mapping and GeoVisualisation with R**\n\n## [Personal Exploration]{.underline}\n\nAs part of this exercise, I have conducted a separate investigation into the distribution of residential types across Singapore, applying the concepts learned. A detailed analysis can be found in section 2.5, but here's a concise overview of my findings:\n\n1.  [Residential Distribution Pattern]{.underline}: A clear geographical divide emerges in the distribution of housing types. The southern half and central areas of Singapore exhibit a higher concentration of landed properties and condominiums, while HDB flats predominate in other regions.\n\n2.  [Socioeconomic Implications]{.underline}: Using housing types as proxies for income levels (associating HDB flats with lower to middle-income households and landed properties/condominiums with higher-income residents) reveals a distinct economic stratification. The southern and central regions appear to be hubs of affluence compared to surrounding areas.\n\n3.  [Demographic Correlation]{.underline}: Interestingly, areas with a higher proportion of landed properties and condominiums tend to show elevated dependency ratios, especially in central Singapore.\n\nThis correlation suggests that in areas with more high-end housing:\n\n1.   There may be a higher concentration of retirees who can afford luxurious accommodations.\n\n2.   Affluent families might have more children or be more likely to have stay-at-home parents.\n\n3.   The working population in these areas might be smaller relative to dependents, possibly due to higher wealth allowing for earlier retirement or extended education.\n\n## **2.1 Overview**\n\nIn general, thematic mapping involves the use of map symbols to visualize selected properties of geographic features that are not naturally visible, such as population, temperature, crime rate, and property prices, just to mention a few of them.\n\nGeovisualisation, on the other hand, works by providing graphical ideation to render a place, a phenomenon or a process visible, enabling human’s most powerful information-processing abilities – those of spatial cognition associated with our eye–brain vision system – to be directly brought to bear.\n\n## **2.2 Getting Started**\n\n#### Install and Launch R Packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf, tmap, tidyverse)\n```\n:::\n\n\n## **2.3 Importing Data into R**\n\n### **2.3.1 The Data**\n\nTwo data set will be used to create the choropleth map. They are:\n\n-   Master Plan 2014 Subzone Boundary (Web) (i.e. `MP14_SUBZONE_WEB_PL`) in ESRI shapefile format. It can be downloaded at [data.gov.sg](https://data.gov.sg/) This is a geospatial data. It consists of the geographical boundary of Singapore at the planning subzone level. The data is based on URA Master Plan 2014.\n\n-   Singapore Residents by Planning Area / Subzone, Age Group, Sex and Type of Dwelling, June 2011-2020 in csv format (i.e. `respopagesextod2011to2020.csv`). This is an aspatial data fie. It can be downloaded at [Department of Statistics, Singapore](https://www.singstat.gov.sg/) Although it does not contain any coordinates values, but it’s PA and SZ fields can be used as unique identifiers to geocode to `MP14_SUBZONE_WEB_PL` shapefile.\n\n### **2.3.2 Importing Geospatial Data into R**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz <- st_read(dsn = \"data/geospatial\", \n                layer = \"MP14_SUBZONE_WEB_PL\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\zcchong\\IS415\\Hands-on_Ex\\Hands-on_Ex02\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\nFirst 10 features:\n   OBJECTID SUBZONE_NO       SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N\n1         1          1    MARINA SOUTH    MSSZ01      Y    MARINA SOUTH\n2         2          1    PEARL'S HILL    OTSZ01      Y          OUTRAM\n3         3          3       BOAT QUAY    SRSZ03      Y SINGAPORE RIVER\n4         4          8  HENDERSON HILL    BMSZ08      N     BUKIT MERAH\n5         5          3         REDHILL    BMSZ03      N     BUKIT MERAH\n6         6          7  ALEXANDRA HILL    BMSZ07      N     BUKIT MERAH\n7         7          9   BUKIT HO SWEE    BMSZ09      N     BUKIT MERAH\n8         8          2     CLARKE QUAY    SRSZ02      Y SINGAPORE RIVER\n9         9         13 PASIR PANJANG 1    QTSZ13      N      QUEENSTOWN\n10       10          7       QUEENSWAY    QTSZ07      N      QUEENSTOWN\n   PLN_AREA_C       REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR\n1          MS CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84\n2          OT CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06\n3          SR CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96\n4          BM CENTRAL REGION       CR 3775D82C5DDBEFBD 2014-12-05 26782.83\n5          BM CENTRAL REGION       CR 85D9ABEF0A40678F 2014-12-05 26201.96\n6          BM CENTRAL REGION       CR 9D286521EF5E3B59 2014-12-05 25358.82\n7          BM CENTRAL REGION       CR 7839A8577144EFE2 2014-12-05 27680.06\n8          SR CENTRAL REGION       CR 48661DC0FBA09F7A 2014-12-05 29253.21\n9          QT CENTRAL REGION       CR 1F721290C421BFAB 2014-12-05 22077.34\n10         QT CENTRAL REGION       CR 3580D2AFFBEE914C 2014-12-05 24168.31\n     Y_ADDR SHAPE_Leng SHAPE_Area                       geometry\n1  29220.19   5267.381  1630379.3 MULTIPOLYGON (((31495.56 30...\n2  29782.05   3506.107   559816.2 MULTIPOLYGON (((29092.28 30...\n3  29974.66   1740.926   160807.5 MULTIPOLYGON (((29932.33 29...\n4  29933.77   3313.625   595428.9 MULTIPOLYGON (((27131.28 30...\n5  30005.70   2825.594   387429.4 MULTIPOLYGON (((26451.03 30...\n6  29991.38   4428.913  1030378.8 MULTIPOLYGON (((25899.7 297...\n7  30230.86   3275.312   551732.0 MULTIPOLYGON (((27746.95 30...\n8  30222.86   2208.619   290184.7 MULTIPOLYGON (((29351.26 29...\n9  29893.78   6571.323  1084792.3 MULTIPOLYGON (((20996.49 30...\n10 30104.18   3454.239   631644.3 MULTIPOLYGON (((24472.11 29...\n```\n\n\n:::\n:::\n\n\nNotice that only the first ten records will be displayed. Do you know why?\n\n**This is due to readability. Showing just the first few records allows users to quickly inspect the structure and content of the data.**\n\n### **2.3.3 Importing Attribute Data into R**\n\n\n::: {.cell}\n\n```{.r .cell-code}\npopdata <- read_csv(\"data/aspatial/respopagesextod2011to2020.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 984656 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (5): PA, SZ, AG, Sex, TOD\ndbl (2): Pop, Time\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nspec(popdata)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\ncols(\n  PA = col_character(),\n  SZ = col_character(),\n  AG = col_character(),\n  Sex = col_character(),\n  TOD = col_character(),\n  Pop = col_double(),\n  Time = col_double()\n)\n```\n\n\n:::\n:::\n\n\n### **Data Preparation**\n\nBefore a thematic map can be prepared, you are required to prepare a data table with year 2020 values. The data table should include the variables PA, SZ, YOUNG, ECONOMY ACTIVE, AGED, TOTAL, DEPENDENCY.\n\n-   YOUNG: age group 0 to 4 until age groyup 20 to 24, Row 2 : 5 +13\n\n-   ECONOMY ACTIVE: age group 25-29 until age group 60-64, 6 - 12 +14\n\n-   AGED: age group 65 and above, 15 - 20\n\n-   TOTAL: all age group, and , 2 :20\n\n-   DEPENDENCY: the ratio between young and aged against economy active group\n\n\n::: {.cell}\n\n```{.r .cell-code}\npopdata2020 <- popdata %>%\n  filter(Time == 2020) %>%\n  group_by(PA, SZ, AG) %>%\n  summarise(`POP` = sum(`Pop`)) %>%\n  ungroup()%>%\n  pivot_wider(names_from=AG, \n              values_from=POP) \n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'PA', 'SZ'. You can override using the\n`.groups` argument.\n```\n\n\n:::\n\n```{.r .cell-code}\n# Inspect the structure of the data\nstr(popdata2020)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\ntibble [332 × 21] (S3: tbl_df/tbl/data.frame)\n $ PA         : chr [1:332] \"Ang Mo Kio\" \"Ang Mo Kio\" \"Ang Mo Kio\" \"Ang Mo Kio\" ...\n $ SZ         : chr [1:332] \"Ang Mo Kio Town Centre\" \"Cheng San\" \"Chong Boon\" \"Kebun Bahru\" ...\n $ 0_to_4     : num [1:332] 170 1060 850 680 210 560 200 670 0 160 ...\n $ 10_to_14   : num [1:332] 280 1040 1020 960 400 640 390 930 0 210 ...\n $ 15_to_19   : num [1:332] 340 1160 1070 1010 450 700 460 830 0 260 ...\n $ 20_to_24   : num [1:332] 270 1330 1310 1170 500 860 590 890 0 300 ...\n $ 25_to_29   : num [1:332] 260 1720 1610 1410 500 970 680 1310 0 320 ...\n $ 30_to_34   : num [1:332] 310 2020 1890 1420 340 1030 500 1410 0 240 ...\n $ 35_to_39   : num [1:332] 330 2150 1720 1440 300 980 330 1420 0 250 ...\n $ 40_to_44   : num [1:332] 400 2080 1810 1630 370 1010 430 1640 0 260 ...\n $ 45_to_49   : num [1:332] 480 2200 1820 1810 550 1190 580 1580 0 320 ...\n $ 50_to_54   : num [1:332] 380 2050 1900 1720 540 1200 580 1370 0 290 ...\n $ 55_to_59   : num [1:332] 310 2130 2100 1800 550 1390 660 1570 0 340 ...\n $ 5_to_9     : num [1:332] 230 1050 850 800 320 570 300 870 0 180 ...\n $ 60_to_64   : num [1:332] 290 2110 2150 1780 480 1280 720 1650 0 390 ...\n $ 65_to_69   : num [1:332] 250 2180 2100 1710 410 1200 560 1530 0 270 ...\n $ 70_to_74   : num [1:332] 240 1750 1800 1450 360 970 390 1430 0 200 ...\n $ 75_to_79   : num [1:332] 130 960 1120 830 230 630 210 890 0 120 ...\n $ 80_to_84   : num [1:332] 100 650 800 630 150 430 190 700 0 80 ...\n $ 85_to_89   : num [1:332] 30 340 430 350 100 250 110 360 0 50 ...\n $ 90_and_over: num [1:332] 10 170 220 150 60 130 70 190 0 30 ...\n```\n\n\n:::\n\n```{.r .cell-code}\n# View the first few rows\nprint(head(popdata2020))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 21\n  PA       SZ    `0_to_4` `10_to_14` `15_to_19` `20_to_24` `25_to_29` `30_to_34`\n  <chr>    <chr>    <dbl>      <dbl>      <dbl>      <dbl>      <dbl>      <dbl>\n1 Ang Mo … Ang …      170        280        340        270        260        310\n2 Ang Mo … Chen…     1060       1040       1160       1330       1720       2020\n3 Ang Mo … Chon…      850       1020       1070       1310       1610       1890\n4 Ang Mo … Kebu…      680        960       1010       1170       1410       1420\n5 Ang Mo … Semb…      210        400        450        500        500        340\n6 Ang Mo … Shan…      560        640        700        860        970       1030\n# ℹ 13 more variables: `35_to_39` <dbl>, `40_to_44` <dbl>, `45_to_49` <dbl>,\n#   `50_to_54` <dbl>, `55_to_59` <dbl>, `5_to_9` <dbl>, `60_to_64` <dbl>,\n#   `65_to_69` <dbl>, `70_to_74` <dbl>, `75_to_79` <dbl>, `80_to_84` <dbl>,\n#   `85_to_89` <dbl>, `90_and_over` <dbl>\n```\n\n\n:::\n:::\n\n\n-   Important fact that column indexes start from 1 and not 0 like in python!\n\n\n::: {.cell}\n\n```{.r .cell-code}\npopdata2020 <- popdata %>%\n  filter(Time == 2020) %>%\n  group_by(PA, SZ, AG) %>%\n  summarise(`POP` = sum(`Pop`)) %>%\n  ungroup()%>%\n  pivot_wider(names_from=AG, \n              values_from=POP) %>%\n  mutate(YOUNG = rowSums(.[3:6])\n         +rowSums(.[14])) %>%\nmutate(`ECONOMY ACTIVE` = rowSums(.[7:13])+\nrowSums(.[15]))%>%\nmutate(`AGED`=rowSums(.[16:21])) %>%\nmutate(`TOTAL`=rowSums(.[3:21])) %>%  \nmutate(`DEPENDENCY` = (`YOUNG` + `AGED`)\n/`ECONOMY ACTIVE`) %>%\n  select(`PA`, `SZ`, `YOUNG`, \n       `ECONOMY ACTIVE`, `AGED`, \n       `TOTAL`, `DEPENDENCY`)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'PA', 'SZ'. You can override using the\n`.groups` argument.\n```\n\n\n:::\n:::\n\n\n#### 2.3.4.2 Joining the attribute data and geospatial data\n\nBefore we can perform the georelational join, one extra step is required to convert the values in PA and SZ fields to uppercase. This is because the values of PA and SZ fields are made up of upper- and lowercase. On the other, hand the SUBZONE_N and PLN_AREA_N are in uppercase.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npopdata2020 <- popdata2020 %>%\n  mutate_at(.vars = vars(PA, SZ), \n          .funs = list(toupper)) %>%\n  filter(`ECONOMY ACTIVE` > 0)\n```\n:::\n\n\nNext, *left_join()* of **dplyr** is used to join the geographical data and attribute table using planning subzone name e.g. *SUBZONE_N* and *SZ* as the common identifier.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz_pop2020 <- left_join(mpsz, popdata2020,\n                          by = c(\"SUBZONE_N\" = \"SZ\"))\n```\n:::\n\n\nThing to learn from the code chunk above:\n\n-   *left_join()* of **dplyr** package is used with `mpsz` simple feature data frame as the left data table is to ensure that the output will be a simple features data frame.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(mpsz_pop2020, \"data/rds/mpszpop2020.rds\")\n```\n:::\n\n\n## **2.4 Choropleth Mapping Geospatial Data Using *tmap***\n\nChoropleth mapping involves the symbolization of enumeration units, such as countries, provinces, states, counties or census units, using area patterns or graduated colors. For example, a social scientist may need to use a choropleth map to portray the spatial distribution of aged population of Singapore by Master Plan 2014 Subzone Boundary.\n\nTwo approaches can be used to prepare thematic map using *tmap*, they are:\n\n-   Plotting a thematic map quickly by using *qtm()*.\n\n-   Plotting highly customization thematic map by using tmap elements.\n\n### **2.4.1 Plotting a choropleth map quickly by using *qtm()***\n\nThe easiest and quickest to draw a choropleth map using **tmap** is using *qtm()*. It is concise and provides a good default visualization in many cases.\n\nThe code chunk below will draw a cartographic standard choropleth map as shown below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode(\"plot\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\ntmap mode set to plotting\n```\n\n\n:::\n\n```{.r .cell-code}\nqtm(mpsz_pop2020, \n    fill = \"DEPENDENCY\")\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\nThings to learn from the code chunk above:\n\n-   *tmap_mode()* with “plot” option is used to produce a static map. For interactive mode, “view” option should be used.\n\n-   *fill* argument is used to map the attribute (i.e. DEPENDENCY)\n\n### **2.4.2 Creating a choropleth map by using *tmap*’s elements**\n\nDespite its usefulness of drawing a choropleth map quickly and easily, the disadvantage of *qtm()* is that it makes aesthetics of individual layers harder to control. To draw a high quality cartographic choropleth map as shown in the figure below, **tmap**’s drawing elements should be used.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"Dependency ratio\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\nIn the following sub-section, we will share with you tmap functions that used to plot these elements.\n\n#### 2.4.2.1 Drawing a base map\n\nThe basic building block of **tmap** is *tm_shape()* followed by one or more layer elements such as *tm_fill()* and *tm_polygons()*.\n\nIn the code chunk below, *tm_shape()* is used to define the input data (i.e *mpsz_pop2020*) and *tm_polygons()* is used to draw the planning subzone polygons\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020) +\n  tm_polygons()\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n#### 2.4.2.2 Drawing a choropleth map using *tm_polygons()*\n\nTo draw a choropleth map showing the geographical distribution of a selected variable by planning subzone, we just need to assign the target variable such as *Dependency* to *tm_polygons()*.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\")\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\nThings to learn from *tm_polygons()*:\n\n-   The default interval binning used to draw the choropleth map is called “pretty”. A detailed discussion of the data classification methods supported by **tmap** will be provided in sub-section 4.3.\n\n-   The default color scheme used is `YlOrRd` of ColorBrewer. You will learn more about the color scheme in sub-section 4.4.\n\n-   By default, Missing value will be shaded in grey.\n\n#### 2.4.2.3 Drawing a choropleth map using *tm_fill()* and \\*tm_border()\\*\\*\n\nActually, *tm_polygons()* is a wrapper of *tm_fill()* and *tm_border()*. *tm_fill()* shades the polygons by using the default color scheme and *tm_borders()* adds the borders of the shapefile onto the choropleth map.\n\nThe code chunk below draws a choropleth map by using *tm_fill()* alone.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\")\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\nNotice that the planning subzones are shared according to the respective dependency values\n\nTo add the boundary of the planning subzones, tm_borders will be used as shown in the code chunk below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\") +\n  tm_borders(lwd = 0.1,  alpha = 1)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\nNotice that light-gray border lines have been added on the choropleth map.\n\nThe *alpha* argument is used to define transparency number between 0 (totally transparent) and 1 (not transparent). By default, the alpha value of the col is used (normally 1).\n\nBeside *alpha* argument, there are three other arguments for *tm_borders()*, they are:\n\n-   *col* = border colour,\n\n-   *lwd* = border line width. The default is 1, and\n\n-   *lty* = border line type. The default is “solid”.\n\n### **2.4.3 Data classification methods of tmap**\n\nMost choropleth maps employ some methods of data classification. The point of classification is to take a large number of observations and group them into data ranges or classes.\n\n**tmap** provides a total ten data classification methods, namely: *fixed*, *sd*, *equal*, *pretty* (default), *quantile*, *kmeans*, *hclust*, *bclust*, *fisher*, and *jenks*.\n\nTo define a data classification method, the *style* argument of *tm_fill()* or *tm_polygons()* will be used.\n\n#### 2.4.3.1 Plotting choropleth maps with built-in classification methods\n\nThe code chunk below shows a quantile data classification that used 5 classes.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"quantile\") +\n  tm_borders(alpha = 0.5)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\nIn the code chunk below, *equal* data classification method is used.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"equal\") +\n  tm_borders(alpha = 0.5)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n\nNotice that the distribution of quantile data classification method are more evenly distributed then equal data classification method.\n\n> **Warning: Maps Lie!**\n\n> DIY: Using what you had learned, prepare choropleth maps by using different classification methods supported by tmap and compare their differences.\n\n> DIY: Preparing choropleth maps by using similar classification method but with different numbers of classes (i.e. 2, 6, 10, 20). Compare the output maps, what observation can you draw?\n\n#### DIY - Compare different classifications methods\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"sd\", \n          palette = \"Blues\",\n          title = \"Dependency ratio\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone(SD)\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"equal\", \n          palette = \"Blues\",\n          title = \"Dependency ratio\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone(equal)\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"pretty\", \n          palette = \"Blues\",\n          title = \"Dependency ratio\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone(pretty)\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"Dependency ratio\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone(quantile)\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"kmeans\", \n          palette = \"Blues\",\n          title = \"Dependency ratio\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone(kmeans)\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"hclust\", \n          palette = \"Blues\",\n          title = \"Dependency ratio\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone(hclust)\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-24-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"bclust\", \n          palette = \"Blues\",\n          title = \"Dependency ratio\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone(bclust)\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-25-1.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCommittee Member: 1(1) 2(1) 3(1) 4(1) 5(1) 6(1) 7(1) 8(1) 9(1) 10(1)\nComputing Hierarchical Clustering\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"fisher\", \n          palette = \"Blues\",\n          title = \"Dependency ratio\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone(fisher)\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-26-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"jenks\", \n          palette = \"Blues\",\n          title = \"Dependency ratio\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone(jenks)\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-27-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"dpih\", \n          palette = \"Blues\",\n          title = \"Dependency ratio\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone(dpih)\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-28-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"headtails\", \n          palette = \"Blues\",\n          title = \"Dependency ratio\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone(headtails)\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-29-1.png){width=672}\n:::\n:::\n\n\n> DIY: Using what you had learned, prepare choropleth maps by using different classification methods supported by tmap and compare their differences.\n\n### Lessons Learned\n\nThe choice of classification method in choropleth maps significantly influences how viewers interpret the data and understand the story the map is telling.\n\nTwo common methods, equal and quantile, can produce strikingly different visual representations of the same data.\n\nThe equal approach can often highlight extremes in the data, potentially showing only a small portion of the map as \"high risk\" or \"high dependency.\" As a result, it may **understate the overall severity** or prevalence of the phenomenon being mapped. When using this method, viewers might assume that only one portion of the map is \"at risk\" or has a high dependency, while the rest appears relatively uniform.\n\nIn contrast, the quantile method divides the data into classes with an equal number of observations in each. This ensures a more even distribution of colors across the map, which tends to show a more balanced distribution of risk or dependency. However, this approach might **overstate the severity** in some areas, especially if the underlying data is not evenly distributed. When using quantile classification, the map may suggest that the phenomenon is more **widespread**, giving the impression that everywhere is at similar levels of risk.\n\n> DIY: Preparing choropleth maps by using similar classification method but with different numbers of classes (i.e. 2, 6, 10, 20). Compare the output maps, what observation can you draw?\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          n = 2,\n          title = \"Dependency ratio\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone(quantile)\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-30-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          n = 6,\n          title = \"Dependency ratio\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone(quantile)\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-31-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          n = 10,\n          title = \"Dependency ratio\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone(quantile)\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-32-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          n = 20,\n          title = \"Dependency ratio\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone(quantile)\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-33-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"equal\", \n          palette = \"Blues\",\n          n = 2,\n          title = \"Dependency ratio\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone(equal)\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-34-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"equal\", \n          palette = \"Blues\",\n          n = 10,\n          title = \"Dependency ratio\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone(equal)\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-35-1.png){width=672}\n:::\n:::\n\n\n> DIY: Preparing choropleth maps by using similar classification method but with different numbers of classes (i.e. 2, 6, 10, 20). Compare the output maps, what observation can you draw?\n\n### Lessons Learned\n\nWe can observe significant differences in how the data is visually represented and interpreted.\n\nUsing the quantile method, changing the number of classes has a noticeable impact on the map's appearance and interpretation.\n\nWith just two classes, the map becomes essentially binary, dividing the data into two equal groups. This simplification can be useful for highlighting broad patterns but may oversimplify complex spatial distributions. As we increase the number of classes to 6, 10, or 20, the map begins to show a more nuanced and even distribution of the data. The differences between 6, 10, and 20 classes become less pronounced, suggesting that beyond a certain point, adding more classes may not significantly enhance the viewer's understanding of the data distribution.\n\nIn contrast, when using the equal interval method, the visual representation tends to remain relatively consistent regardless of the number of classes used. This stability is often due to the presence of outliers in the data. With outliers, most of the map area falls into the lower intervals, while only a small portion - representing the outliers - falls into the higher intervals. This results in a map that appears almost binary, with one or two areas standing out dramatically from the rest, even when using a higher number of classes like 10 or 20.\n\n#### 2.4.3.2 Plotting choropleth map with custom break\n\nFor all the built-in styles, the category breaks are computed internally. In order to override these defaults, the breakpoints can be set explicitly by means of the *breaks* argument to the *tm_fill()*. It is important to note that, in **tmap** the breaks include a minimum and maximum. As a result, in order to end up with n categories, n+1 elements must be specified in the *breaks* option (the values must be in increasing order).\n\nBefore we get started, it is always a good practice to get some descriptive statistics on the variable before setting the break points. Code chunk below will be used to compute and display the descriptive statistics of **DEPENDENCY** field.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(mpsz_pop2020$DEPENDENCY)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n 0.0000  0.6519  0.7025  0.7742  0.7645 19.0000      92 \n```\n\n\n:::\n:::\n\n\nWith reference to the results above, we set break point at 0.60, 0.70, 0.80, and 0.90. In addition, we also need to include a minimum and maximum, which we set at 0 and 100. Our *breaks* vector is thus c(0, 0.60, 0.70, 0.80, 0.90, 1.00)\n\nNow, we will plot the choropleth map by using the code chunk below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          breaks = c(0, 0.60, 0.70, 0.80, 0.90, 1.00)) +\n  tm_borders(alpha = 0.5)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Values have found that are higher than the highest break\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-37-1.png){width=672}\n:::\n:::\n\n\n### **2.4.4 Colour Scheme**\n\n**tmap** supports colour ramps either defined by the user or a set of predefined colour ramps from the **RColorBrewer** package.\n\n#### 2.4.4.1 Using ColourBrewer palette\n\nTo change the colour, we assign the preferred colour to *palette* argument of *tm_fill()* as shown in the code chunk below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 6,\n          style = \"quantile\",\n          palette = \"Blues\") +\n  tm_borders(alpha = 0.5)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-38-1.png){width=672}\n:::\n:::\n\n\nNotice that the choropleth map is shaded in green.\n\nTo reverse the colour shading, add a “-” prefix.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          style = \"quantile\",\n          palette = \"-Greens\") +\n  tm_borders(alpha = 0.5)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-39-1.png){width=672}\n:::\n:::\n\n\nNotice that the colour scheme has been reversed.\n\n### **2.4.5 Map Layouts**\n\nMap layout refers to the combination of all map elements into a cohesive map. Map elements include among others the objects to be mapped, the title, the scale bar, the compass, margins and aspects ratios. Colour settings and data classification methods covered in the previous section relate to the palette and break-points are used to affect how the map looks.\n\n#### 2.4.5.1 Map Legend\n\nIn **tmap**, several *legend* options are provided to change the placement, format and appearance of the legend.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"jenks\", \n          palette = \"Blues\", \n          legend.hist = TRUE, \n          legend.is.portrait = TRUE,\n          legend.hist.z = 0.1) +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone \\n(Jenks classification)\",\n            main.title.position = \"center\",\n            main.title.size = 1,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            legend.outside = FALSE,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\n  tm_borders(alpha = 0.5)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-40-1.png){width=672}\n:::\n:::\n\n\n#### 2.4.5.2 Map style\n\n**tmap** allows a wide variety of layout settings to be changed. They can be called by using *tmap_style()*.\n\nThe code chunk below shows the *classic* style is used.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"-Greens\") +\n  tm_borders(alpha = 0.5) +\n  tmap_style(\"classic\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\ntmap style set to \"classic\"\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nother available styles are: \"white\", \"gray\", \"natural\", \"cobalt\", \"col_blind\", \"albatross\", \"beaver\", \"bw\", \"watercolor\" \n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-41-1.png){width=672}\n:::\n:::\n\n\n#### 2.4.5.3 Cartographic Furniture\n\nBeside map style, **tmap** also also provides arguments to draw other map furniture such as compass, scale bar and grid lines.\n\nIn the code chunk below, *tm_compass()*, *tm_scale_bar()* and *tm_grid()* are used to add compass, scale bar and grid lines onto the choropleth map.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"No. of persons\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio \\nby planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar(width = 0.15) +\n  tm_grid(lwd = 0.1, alpha = 0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-42-1.png){width=672}\n:::\n:::\n\n\nTo reset the default style, refer to the code chunk below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_style(\"white\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\ntmap style set to \"white\"\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nother available styles are: \"gray\", \"natural\", \"cobalt\", \"col_blind\", \"albatross\", \"beaver\", \"bw\", \"classic\", \"watercolor\" \n```\n\n\n:::\n:::\n\n\n### **2.4.6 Drawing Small Multiple Choropleth Maps**\n\n**Small multiple maps**, also referred to as **facet maps**, are composed of many maps arrange side-by-side, and sometimes stacked vertically. Small multiple maps enable the visualisation of how spatial relationships change with respect to another variable, such as time.\n\nIn **tmap**, small multiple maps can be plotted in three ways:\n\n-   by assigning multiple values to at least one of the asthetic arguments,\n\n-   by defining a group-by variable in *tm_facets()*, and\n\n-   by creating multiple stand-alone maps with *tmap_arrange()*.\n\n#### 2.4.6.1 By assigning multiple values to at least one of the aesthetic arguments\n\nIn this example, small multiple choropleth maps are created by defining ***ncols*** in **tm_fill()**\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020)+\n  tm_fill(c(\"YOUNG\", \"AGED\"),\n          style = \"equal\", \n          palette = \"Blues\") +\n  tm_layout(legend.position = c(\"right\", \"bottom\")) +\n  tm_borders(alpha = 0.5)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-44-1.png){width=672}\n:::\n:::\n\n\nIn this example, small multiple choropleth maps are created by assigning multiple values to at least one of the aesthetic arguments\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020)+ \n  tm_polygons(c(\"DEPENDENCY\",\"AGED\"),\n          style = c(\"equal\", \"quantile\"), \n          palette = list(\"Blues\",\"Greens\")) +\n  tm_layout(legend.position = c(\"right\", \"bottom\"))\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-45-1.png){width=672}\n:::\n:::\n\n\n#### 2.4.6.2 By defining a group-by variable in *tm_facets()*\n\nIn this example, multiple small choropleth maps are created by using **tm_facets()**.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020) +\n  tm_fill(\"DEPENDENCY\",\n          style = \"quantile\",\n          palette = \"Blues\",\n          thres.poly = 0) + \n  tm_facets(by=\"REGION_N\", \n            free.coords=TRUE, \n            drop.shapes=TRUE) +\n  tm_layout(legend.show = FALSE,\n            title.position = c(\"center\", \"center\"), \n            title.size = 20) +\n  tm_borders(alpha = 0.5)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: The argument drop.shapes has been renamed to drop.units, and is\ntherefore deprecated\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-46-1.png){width=672}\n:::\n:::\n\n\n#### 2.4.6.3 By creating multiple stand-alone maps with *tmap_arrange()*\n\nIn this example, multiple small choropleth maps are created by creating multiple stand-alone maps with **tmap_arrange()**.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nyoungmap <- tm_shape(mpsz_pop2020)+ \n  tm_polygons(\"YOUNG\", \n              style = \"quantile\", \n              palette = \"Blues\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nagedmap <- tm_shape(mpsz_pop2020)+ \n  tm_polygons(\"AGED\", \n              style = \"quantile\", \n              palette = \"Blues\")\n\ntmap_arrange(youngmap, agedmap, asp=1, ncol=2)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-48-1.png){width=672}\n:::\n:::\n\n\n### **2.4.7 Mapping Spatial Object Meeting a Selection Criterion**\n\nInstead of creating small multiple choropleth map, you can also use selection funtion to map spatial objects meeting the selection criterion.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020[mpsz_pop2020$REGION_N==\"CENTRAL REGION\", ])+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\", \n          legend.hist = TRUE, \n          legend.is.portrait = TRUE,\n          legend.hist.z = 0.1) +\n  tm_layout(legend.outside = TRUE,\n            legend.height = 0.45, \n            legend.width = 5.0,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\n  tm_borders(alpha = 0.5)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in pre_process_gt(x, interactive = interactive, orig_crs =\ngm$shape.orig_crs): legend.width controls the width of the legend within a map.\nPlease use legend.outside.size to control the width of the outside legend\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-49-1.png){width=672}\n:::\n:::\n\n\n## **2.5 Personal Learning and Explorations**\n\nSo I have gotten curious about the distribution of residential patterns across Singapore. Hence, I have decided to explore this area as part of my own learning.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npopdata_hdb <- read_csv(\"data/aspatial/respopagesextod2011to2020.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 984656 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (5): PA, SZ, AG, Sex, TOD\ndbl (2): Pop, Time\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nstr(popdata_hdb)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nspc_tbl_ [984,656 × 7] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ PA  : chr [1:984656] \"Ang Mo Kio\" \"Ang Mo Kio\" \"Ang Mo Kio\" \"Ang Mo Kio\" ...\n $ SZ  : chr [1:984656] \"Ang Mo Kio Town Centre\" \"Ang Mo Kio Town Centre\" \"Ang Mo Kio Town Centre\" \"Ang Mo Kio Town Centre\" ...\n $ AG  : chr [1:984656] \"0_to_4\" \"0_to_4\" \"0_to_4\" \"0_to_4\" ...\n $ Sex : chr [1:984656] \"Males\" \"Males\" \"Males\" \"Males\" ...\n $ TOD : chr [1:984656] \"HDB 1- and 2-Room Flats\" \"HDB 3-Room Flats\" \"HDB 4-Room Flats\" \"HDB 5-Room and Executive Flats\" ...\n $ Pop : num [1:984656] 0 10 30 50 0 0 40 0 0 10 ...\n $ Time: num [1:984656] 2011 2011 2011 2011 2011 ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   PA = col_character(),\n  ..   SZ = col_character(),\n  ..   AG = col_character(),\n  ..   Sex = col_character(),\n  ..   TOD = col_character(),\n  ..   Pop = col_double(),\n  ..   Time = col_double()\n  .. )\n - attr(*, \"problems\")=<externalptr> \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Check Table\npopdata2020_hdb <- popdata_hdb %>%\n  filter(Time == 2020) %>%\n  group_by(PA, SZ,`TOD`) %>%\n  summarise(`POP` = sum(`Pop`))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'PA', 'SZ'. You can override using the\n`.groups` argument.\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(popdata2020_hdb, n = 10)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 × 4\n# Groups:   PA, SZ [2]\n   PA         SZ                     TOD                                     POP\n   <chr>      <chr>                  <chr>                                 <dbl>\n 1 Ang Mo Kio Ang Mo Kio Town Centre Condominiums and Other Apartments      1960\n 2 Ang Mo Kio Ang Mo Kio Town Centre HDB 1- and 2-Room Flats                   0\n 3 Ang Mo Kio Ang Mo Kio Town Centre HDB 3-Room Flats                        420\n 4 Ang Mo Kio Ang Mo Kio Town Centre HDB 4-Room Flats                        630\n 5 Ang Mo Kio Ang Mo Kio Town Centre HDB 5-Room and Executive Flats         1800\n 6 Ang Mo Kio Ang Mo Kio Town Centre HUDC Flats (excluding those privatis…     0\n 7 Ang Mo Kio Ang Mo Kio Town Centre Landed Properties                         0\n 8 Ang Mo Kio Ang Mo Kio Town Centre Others                                    0\n 9 Ang Mo Kio Cheng San              Condominiums and Other Apartments         0\n10 Ang Mo Kio Cheng San              HDB 1- and 2-Room Flats                1010\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Actual code\npopdata2020_hdb <- popdata_hdb %>%\n  filter(Time == 2020) %>%\n  group_by(PA, SZ,`TOD`) %>%\n  summarise(`POP` = sum(`Pop`)) %>%\n  ungroup()%>%\n  pivot_wider(names_from=TOD, \n              values_from=POP)%>%\n  mutate(HDB = rowSums(.[4:7]))%>%\n  mutate(Landed_And_Condo = rowSums(.[3])\n         +rowSums(.[9]))%>%\n  mutate(Total = rowSums(.[3:7]) + rowSums(.[9]))%>%\n  mutate(`HDB_Ratio` = (`HDB`)\n/`Total`)%>%\n  mutate(`Landed_Ratio` = (`Landed_And_Condo`)\n/`Total`)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'PA', 'SZ'. You can override using the\n`.groups` argument.\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(popdata2020_hdb, n = 10)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 × 15\n   PA     SZ    Condominiums and Oth…¹ HDB 1- and 2-Room Fl…² `HDB 3-Room Flats`\n   <chr>  <chr>                  <dbl>                  <dbl>              <dbl>\n 1 Ang M… Ang …                   1960                      0                420\n 2 Ang M… Chen…                      0                   1010              13300\n 3 Ang M… Chon…                      0                   1460              12220\n 4 Ang M… Kebu…                   1680                   1620              10260\n 5 Ang M… Semb…                    300                      0                  0\n 6 Ang M… Shan…                      0                   2720               6050\n 7 Ang M… Tago…                   2520                      0                  0\n 8 Ang M… Town…                      0                   1370               6500\n 9 Ang M… Yio …                      0                      0                  0\n10 Ang M… Yio …                   1880                      0                  0\n# ℹ abbreviated names: ¹​`Condominiums and Other Apartments`,\n#   ²​`HDB 1- and 2-Room Flats`\n# ℹ 10 more variables: `HDB 4-Room Flats` <dbl>,\n#   `HDB 5-Room and Executive Flats` <dbl>,\n#   `HUDC Flats (excluding those privatised)` <dbl>, `Landed Properties` <dbl>,\n#   Others <dbl>, HDB <dbl>, Landed_And_Condo <dbl>, Total <dbl>,\n#   HDB_Ratio <dbl>, Landed_Ratio <dbl>\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npopdata2020_hdb <- popdata2020_hdb %>%\n  mutate_at(.vars = vars(PA, SZ), \n          .funs = list(toupper))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(popdata2020_hdb, n = 10)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 × 15\n   PA     SZ    Condominiums and Oth…¹ HDB 1- and 2-Room Fl…² `HDB 3-Room Flats`\n   <chr>  <chr>                  <dbl>                  <dbl>              <dbl>\n 1 ANG M… ANG …                   1960                      0                420\n 2 ANG M… CHEN…                      0                   1010              13300\n 3 ANG M… CHON…                      0                   1460              12220\n 4 ANG M… KEBU…                   1680                   1620              10260\n 5 ANG M… SEMB…                    300                      0                  0\n 6 ANG M… SHAN…                      0                   2720               6050\n 7 ANG M… TAGO…                   2520                      0                  0\n 8 ANG M… TOWN…                      0                   1370               6500\n 9 ANG M… YIO …                      0                      0                  0\n10 ANG M… YIO …                   1880                      0                  0\n# ℹ abbreviated names: ¹​`Condominiums and Other Apartments`,\n#   ²​`HDB 1- and 2-Room Flats`\n# ℹ 10 more variables: `HDB 4-Room Flats` <dbl>,\n#   `HDB 5-Room and Executive Flats` <dbl>,\n#   `HUDC Flats (excluding those privatised)` <dbl>, `Landed Properties` <dbl>,\n#   Others <dbl>, HDB <dbl>, Landed_And_Condo <dbl>, Total <dbl>,\n#   HDB_Ratio <dbl>, Landed_Ratio <dbl>\n```\n\n\n:::\n:::\n\n\nAt this point, we have the number people living in the different types of dwelling per region.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz_HDB2020 <- left_join(mpsz, popdata2020_hdb,\n                          by = c(\"SUBZONE_N\" = \"SZ\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_HDB2020)+\n  tm_fill(\"HDB 1- and 2-Room Flats\", \n          style = \"equal\", \n          palette = \"Blues\",\n          title = \"Total Pops\") +\n  tm_layout(main.title = \"Distribution of 1 Room & 2 Room Flats by planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-59-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_HDB2020)+\n  tm_fill(\"HDB 3-Room Flats\", \n          style = \"equal\", \n          palette = \"Blues\",\n          title = \"Total Pops\") +\n  tm_layout(main.title = \"Distribution of HDB 3-Room Flats by planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-60-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_HDB2020)+\n  tm_fill(\"HDB 4-Room Flats\", \n          style = \"equal\", \n          palette = \"Blues\",\n          title = \"Total Pops\") +\n  tm_layout(main.title = \"Distribution of HDB 4-Room Flats by planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-61-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_HDB2020)+\n  tm_fill(\"HDB 5-Room and Executive Flats\", \n          style = \"equal\", \n          palette = \"Blues\",\n          title = \"Total Pops\") +\n  tm_layout(main.title = \"Distribution of HDB 5-Room and Executive Flats by planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-62-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_HDB2020)+\n  tm_fill(\"Condominiums and Other Apartments\", \n          style = \"equal\", \n          palette = \"Blues\",\n          title = \"Total Pops\") +\n  tm_layout(main.title = \"Distribution of Condominiums and Other Apartments by planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-63-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_HDB2020)+\n  tm_fill(\"Landed Properties\", \n          style = \"equal\", \n          palette = \"Blues\",\n          title = \"Total Pops\") +\n  tm_layout(main.title = \"Distribution of Landed Properties by planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-64-1.png){width=672}\n:::\n:::\n\n\nThe distribution patterns of various HDB flat categories show similarities to each other, but contrast significantly with the allocation trends observed for condominiums and landed properties.\n\nNevertheless, examining absolute numbers in isolation may not provide a comprehensive picture. Perhaps we should consider analyzing the proportional relationship between HDB flats and private residences (condominiums and landed properties)?\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_HDB2020)+\n  tm_fill(\"HDB_Ratio\", \n          style = \"equal\", \n          palette = \"Blues\",\n          title = \"HDB ratio\") +\n  tm_layout(main.title = \"Distribution of HDB Ratio by planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n              frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-65-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_HDB2020)+\n  tm_fill(\"Landed_Ratio\", \n          style = \"equal\", \n          palette = \"Reds\",\n          title = \"Landed_Ratio\") +\n  tm_layout(main.title = \"Distribution of Landed_Ratio by planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-66-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          n = 20,\n          title = \"Dependency ratio\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone(quantile)\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-67-1.png){width=672}\n:::\n:::\n\n\n### **Conclusion**\n\nThe map reveals a distinct socioeconomic pattern when considering housing types as indicators of income levels. If we associate HDB flats with lower-income households and landed properties with higher-income residents, a clear economic divide emerges. The southern half and central regions of the map display a notably higher concentration of affluence compared to the surrounding areas.\n\nA notable correlation emerges between housing type distribution and demographic composition. Areas with a higher proportion of landed properties and condominiums tend to exhibit elevated dependency ratios, particularly in the central region. This pattern warrants further examination.\n\nTo clarify, the dependency ratio represents the proportion of the population that is typically not in the labor force (the dependent part, including children and elderly) relative to the working-age population.\n\nThis correlation suggests that in areas with more high-end housing:\n\n1.   There may be a higher concentration of retirees who can afford luxurious accommodations.\n\n2.   Affluent families might have more children or be more likely to have stay-at-home parents.\n\n3.   The working population in these areas might be smaller relative to dependents, possibly due to higher wealth allowing for earlier retirement or extended education.\n\n## **2.6 Reference**\n\n### **2.6.1 All about tmap package**\n\n-   [tmap: Thematic Maps in R](https://www.jstatsoft.org/article/view/v084i06)\n\n-   [tmap](https://cran.r-project.org/web/packages/tmap/index.html)\n\n-   [tmap: get started!](https://cran.r-project.org/web/packages/tmap/vignettes/tmap-getstarted.html)\n\n-   [tmap: changes in version 2.0](https://cran.r-project.org/web/packages/tmap/vignettes/tmap-changes-v2.html)\n\n-   [tmap: creating thematic maps in a flexible way (useR!2015)](http://von-tijn.nl/tijn/research/presentations/tmap_user2015.pdf)\n\n-   [Exploring and presenting maps with tmap (useR!2017)](http://von-tijn.nl/tijn/research/presentations/tmap_user2017.pdf)\n\n### **2.6.2 Geospatial data wrangling**\n\n-   [sf: Simple Features for R](https://cran.r-project.org/web/packages/sf/index.html)\n\n-   [Simple Features for R: StandardizedSupport for Spatial Vector Data](https://journal.r-project.org/archive/2018/RJ-2018-009/RJ-2018-009.pdf)\n\n-   [Reading, Writing and Converting Simple Features](https://cran.r-project.org/web/packages/sf/vignettes/sf2.html)\n\n### **2.6.3 Data wrangling**\n\n-   [dplyr](https://dplyr.tidyverse.org/)\n\n-   [Tidy data](https://cran.r-project.org/web/packages/tidyr/vignettes/tidy-data.html)\n\n-   [tidyr: Easily Tidy Data with ‘spread()’ and ‘gather()’ Functions](https://cran.r-project.org/web/packages/tidyr/tidyr.pdf)\n\nUtilized Claude AI to clarify code concepts and refining responses.\n",
    "supporting": [
      "Hands-on_Ex02_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}